# extend schema @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key"])
# @key(fields: "id")

type User  {
    id: ID!
    username: String!
    first_name: String!
    last_name: String!
    age: Int!
    email: String!
    permissions: Int!
    creation_date: String!
    last_login: String
    is_verified: Boolean!
    has_otp:Boolean!
    skills: [skill]
  }

  type Follow {
  id: ID!
  followerId: ID!
  followerType: followTypeEnum!
  followingId: ID!
  followingType: followTypeEnum!
  createdAt: String!
}
type Otp {
    id: ID!
    userId: ID!
    base32: String 
    verified: Boolean!
    last_modified: String!
    enabled: Boolean!
}

  type Interest{
    id: ID!
    nameInterest: String!
    description: String!  
  }

enum followTypeEnum  {
  users 
  associations
}

  type Login {
    user: User
    token: String
  }

  type skill{
    id: ID!
    name: String!
    description: String!
    level: Int
    last_modified: String
    verified: Boolean!
  }

  type Query {
    users: [User]!
    user(id: ID!): User
  }

  type Mutation {
  
    addFollow(
      followerId: ID!
      followerType: followTypeEnum!
      followingId: ID!
      followingType: followTypeEnum!
    ): Follow!
    unFollow(id: ID!): Follow!
    addUser(
      username: String!
      first_name: String!
      last_name: String!
      age: Int!
      email: String!
      password: String!
      permissions: Int
    ): User!
     Signup(
      username: String!
      first_name: String!
      last_name: String!
      age: Int!
      email: String!
      password: String!
    ): User!
    updateUser(
      id: ID!
      username: String
      first_name: String
      last_name: String
      age: Int
      email: String
      password: String
      permissions: Int
    ): User!
    deleteUser(id: ID!): User!
    login(email: String!, password: String!): Login!

    generateOtp(id:ID!): Otp!
    verifyOtp(id:ID!,token:String!): Otp!
    validateOtp(id:ID!,token:String!): Otp!
    disableOtp(id:ID!): User!
    deleteOtp(id:ID!): User!

    sendEmail(name: String!, email: String!, link: String!): Boolean!

    addInterest(
      id: ID!
      nameInterest: String!
      description: String!
      ): Interest!
    deleteInterest(id: ID!): Interest

    addSkill(
      name: String!
      description: String!
      level: String!
      last_modified: Int!
      verified: String!
    ): skill!






  }