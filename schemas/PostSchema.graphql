type Post {
  _id: ID!
  authorPost: ID!
  authorTypePost: String!
  content: String!
  AttachedFiles: [AttachedFile!]!
  CreationDate: String!
  ModificationDate: String
  status: PostStatus!
  tags: [String!]!
}

type AttachedFile {
  url: String
  caption: String
  thumbnail: String
}

enum PostStatus {
  published
  draft
  updated
  deleted
}



type Comment {
  _id: ID!
  postId: ID!
  authorComment: ID!
  authorTypeComment: String!
  content: String!
  AttachedFilesComment: [AttachedFileComment!]!
  status: String!
  CreationDateComment: String!
  ModificationDateComment: String
  parentComment: ID
  replies: [Comment!]!
}

type AttachedFileComment {
  url: String
  caption: String
}

type Like {
  _id: ID!
  reactedOn: ID!
  reactedOnType: String!
  authorLike: ID!
  authorLikeType: String!
  CreationDateLike: String!
  reactionType: Int!
}


type Query{

    posts: [Post]!
    post(_id: ID!): Post

    comments: [Comment]!
    comment(_id: ID!): Comment

    likes: [Like]!
    like(_id: ID!): Like
}

type Mutation{

addPost( 
  authorPost: ID!
  authorTypePost: String!
  content: String!
  AttachedFiles: [AttachedFileInput]
  tags: [String]
): Post!

updatePost(
  _id:ID!
   content: String!
   AttachedFiles: [AttachedFileInput]
   tags: [String]
):Post!

deletePost(_id: ID!): Post!

}

input AttachedFileInput {
  url: String,
  caption: String,
  thumbnail: String
}






